{"ast":null,"code":"var _jsxFileName = \"/Users/tikhonovaks/dev/inspire-board/src/providers/SearchProvider/SearchProvider.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport SearchProviderContext from './SearchProvider.context';\nimport photoApi from '../../utils/PhotoApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchProvider = ({\n  children\n}) => {\n  _s();\n  const [keyWord, setKeyWord] = useState('');\n  const [searchList, setSearchList] = useState([]);\n  const saveSearchListToLocalStorage = list => {\n    localStorage.setItem('searchList', JSON.stringify(list));\n  };\n  const getRandomCards = currentBoardList => {\n    photoApi.fetchStartPhotos().then(data => {\n      const photos = data.photos;\n      const updatedList = photos.map(item => ({\n        id: item.id,\n        src: item.src,\n        alt: item.alt,\n        isSaved: currentBoardList && currentBoardList.some(boardItem => boardItem.id === item.id) ? true : false\n      }));\n      setSearchList(updatedList);\n      saveSearchListToLocalStorage(updatedList);\n    });\n  };\n  const getSearchCards = (keyword, currentBoardList) => {\n    if (!keyword) {\n      return;\n    }\n    photoApi.searchPhoto(keyword).then(data => {\n      const photos = data.photos;\n      const updatedList = photos.map(item => ({\n        id: item.id,\n        src: item.src,\n        alt: item.alt,\n        isSaved: currentBoardList && currentBoardList.some(boardItem => boardItem.id === item.id) ? true : false\n      }));\n      setSearchList(updatedList);\n      saveSearchListToLocalStorage(updatedList);\n    });\n  };\n  const setSavedCard = targetCard => {\n    const updSearchList = searchList.map(srchCard => {\n      if (targetCard.id === srchCard.id) {\n        return {\n          ...srchCard,\n          isSaved: true\n        };\n      }\n      return srchCard;\n    });\n    setSearchList(updSearchList);\n  };\n  const value = {\n    keyWord,\n    getRandomCards,\n    getSearchCards,\n    searchList,\n    setSavedCard,\n    setKeyWord\n  };\n  return /*#__PURE__*/_jsxDEV(SearchProviderContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n};\n_s(SearchProvider, \"UBhHI9M6FZw+pN3G8N1u6fdCzn8=\");\n_c = SearchProvider;\nexport default SearchProvider;\nvar _c;\n$RefreshReg$(_c, \"SearchProvider\");","map":{"version":3,"names":["useState","SearchProviderContext","photoApi","jsxDEV","_jsxDEV","SearchProvider","children","_s","keyWord","setKeyWord","searchList","setSearchList","saveSearchListToLocalStorage","list","localStorage","setItem","JSON","stringify","getRandomCards","currentBoardList","fetchStartPhotos","then","data","photos","updatedList","map","item","id","src","alt","isSaved","some","boardItem","getSearchCards","keyword","searchPhoto","setSavedCard","targetCard","updSearchList","srchCard","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tikhonovaks/dev/inspire-board/src/providers/SearchProvider/SearchProvider.tsx"],"sourcesContent":["import { useState, FC, ReactNode } from 'react';\nimport SearchProviderContext from './SearchProvider.context';\nimport photoApi from '../../utils/PhotoApi';\nimport Image from '../../models/Image';\n\n\nconst SearchProvider: FC<{children: ReactNode}> = ({ children }) => {\n\n\n  const [keyWord, setKeyWord] = useState('');\n  const [searchList, setSearchList] = useState<Image[]>([]);\n\n  const saveSearchListToLocalStorage = (list: Image[]) => {\n    localStorage.setItem('searchList', JSON.stringify(list));\n  };\n\n  \n  const getRandomCards = (currentBoardList: Image[]) => {\n    photoApi\n    .fetchStartPhotos()\n    .then((data) => {\n      const photos = data.photos;\n      const updatedList = photos.map((item: Image) => ({\n        id: item.id,\n        src: item.src,\n        alt: item.alt,\n        isSaved: currentBoardList && currentBoardList.some((boardItem) => boardItem.id === item.id) ? true : false,\n      }));\n      setSearchList(updatedList);\n      saveSearchListToLocalStorage(updatedList);\n    });\n  };\n\n  const getSearchCards = (keyword: string, currentBoardList: Image[]) => {\n    if (!keyword) {\n      return;\n    }\n    photoApi\n    .searchPhoto(keyword)\n    .then((data) => {\n      const photos = data.photos;\n      const updatedList = photos.map((item: Image) => ({\n        id: item.id,\n        src: item.src,\n        alt: item.alt,\n        isSaved: currentBoardList && currentBoardList.some((boardItem) => boardItem.id === item.id) ? true : false,\n      }));\n      setSearchList(updatedList);\n      saveSearchListToLocalStorage(updatedList);\n    })\n  };\n\n  const setSavedCard = (targetCard: Image) => {\n    const updSearchList: Image[] = searchList.map((srchCard: Image) => {\n      if (targetCard.id === srchCard.id) {\n        return {\n          ...srchCard,\n          isSaved: true,\n        };\n      }\n      return srchCard;\n    });\n    setSearchList(updSearchList);\n  };\n\n  const value = {\n    keyWord,\n    getRandomCards,\n    getSearchCards,\n    searchList,\n    setSavedCard,\n    setKeyWord,\n  };\n\n  return <SearchProviderContext.Provider value={value}>\n      {children}\n    </SearchProviderContext.Provider>;\n};\n\nexport default SearchProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}