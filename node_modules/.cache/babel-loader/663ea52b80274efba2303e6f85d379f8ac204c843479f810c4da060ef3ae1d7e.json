{"ast":null,"code":"var _jsxFileName = \"/Users/tikhonovaks/dev/inspire-board/src/providers/BoardProvider/BoardProvider.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport BoardProviderContext from './BoardProvider.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardProvider = ({\n  children\n}) => {\n  _s();\n  // const [boardList, setBoardList] = useState<Image[]>(JSON.parse(localStorage.getItem('savedList') || '') || []);\n  // const [likes, setLikes] = useState<number>(JSON.parse(localStorage.getItem('boardLikes') || '') || 0);\n  // const [boardTitle, setBoardTitle] = useState<string>(JSON.parse(localStorage.getItem('boardTitle') || '') || '');\n\n  const [boardList, setBoardList] = useState([]);\n  const [likes, setLikes] = useState(0);\n  const [boardTitle, setBoardTitle] = useState('');\n  useEffect(() => {\n    localStorage.setItem('savedList', JSON.stringify(boardList));\n    localStorage.setItem('boardLikes', JSON.stringify(likes));\n    localStorage.setItem('boardTitle', JSON.stringify(boardTitle));\n  }, [boardList, likes, boardTitle]);\n  const saveCard = data => {\n    const newCard = {\n      id: data.id,\n      src: data.src,\n      alt: data.alt,\n      isSaved: true\n    };\n    setBoardList(prevList => [...prevList, newCard]);\n  };\n  const deleteCard = data => {\n    const updList = boardList.filter(card => card.src !== data.src);\n    setBoardList(updList);\n  };\n  const handleLikes = () => {\n    setLikes(likes + 1);\n  };\n  const onChangeTitle = e => {\n    setBoardTitle(e.target.value);\n  };\n  const value = {\n    saveCard,\n    deleteCard,\n    handleLikes,\n    onChangeTitle,\n    boardList,\n    likes,\n    boardTitle\n  };\n  return /*#__PURE__*/_jsxDEV(BoardProviderContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_s(BoardProvider, \"/DCvx2/XLRPZ/a9pFRWTCsfUKJE=\");\n_c = BoardProvider;\nexport default BoardProvider;\nvar _c;\n$RefreshReg$(_c, \"BoardProvider\");","map":{"version":3,"names":["useState","useEffect","BoardProviderContext","jsxDEV","_jsxDEV","BoardProvider","children","_s","boardList","setBoardList","likes","setLikes","boardTitle","setBoardTitle","localStorage","setItem","JSON","stringify","saveCard","data","newCard","id","src","alt","isSaved","prevList","deleteCard","updList","filter","card","handleLikes","onChangeTitle","e","target","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tikhonovaks/dev/inspire-board/src/providers/BoardProvider/BoardProvider.tsx"],"sourcesContent":["import { useState, useEffect, ChangeEvent, FC, ReactNode } from 'react';\nimport BoardProviderContext from './BoardProvider.context';\nimport Image from '../../models/Image';\n\nconst BoardProvider: FC<{children: ReactNode}> = ({ children }) => {\n  // const [boardList, setBoardList] = useState<Image[]>(JSON.parse(localStorage.getItem('savedList') || '') || []);\n  // const [likes, setLikes] = useState<number>(JSON.parse(localStorage.getItem('boardLikes') || '') || 0);\n  // const [boardTitle, setBoardTitle] = useState<string>(JSON.parse(localStorage.getItem('boardTitle') || '') || '');\n\n  const [boardList, setBoardList] = useState<Image[]>([]);\n  const [likes, setLikes] = useState<number>(0);\n  const [boardTitle, setBoardTitle] = useState<string>('');\n\n  useEffect(() => {\n    localStorage.setItem('savedList', JSON.stringify(boardList));\n    localStorage.setItem('boardLikes', JSON.stringify(likes));\n    localStorage.setItem('boardTitle', JSON.stringify(boardTitle));\n  }, [boardList, likes, boardTitle]);\n\n  const saveCard = (data: Image) => {\n    const newCard = {\n      id: data.id,\n      src: data.src,\n      alt: data.alt,\n      isSaved: true,\n    };\n    setBoardList((prevList: Image[]) => [...prevList, newCard]);\n  };\n\n  const deleteCard = (data: Image) => {\n  const updList = boardList.filter((card: Image) => card.src !== data.src);\n  setBoardList(updList);\n  }\n\n  const handleLikes = () => {\n    setLikes(likes + 1);\n  };\n\n  const onChangeTitle = (e: ChangeEvent<HTMLInputElement>) => {\n    setBoardTitle(e.target.value);\n  };\n\n  const value = {\n    saveCard,\n    deleteCard,\n    handleLikes,\n    onChangeTitle,\n    boardList,\n    likes,\n    boardTitle,\n  };\n\n  return <BoardProviderContext.Provider value={value}>{children}</BoardProviderContext.Provider>;\n};\n\nexport default BoardProvider;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAoC,OAAO;AACvE,OAAOC,oBAAoB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3D,MAAMC,aAAwC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjE;EACA;EACA;;EAEA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAU,EAAE,CAAC;EACvD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAS,CAAC,CAAC;EAC7C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACda,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACT,SAAS,CAAC,CAAC;IAC5DM,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK,CAAC,CAAC;IACzDI,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU,CAAC,CAAC;EAChE,CAAC,EAAE,CAACJ,SAAS,EAAEE,KAAK,EAAEE,UAAU,CAAC,CAAC;EAElC,MAAMM,QAAQ,GAAIC,IAAW,IAAK;IAChC,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEF,IAAI,CAACE,EAAE;MACXC,GAAG,EAAEH,IAAI,CAACG,GAAG;MACbC,GAAG,EAAEJ,IAAI,CAACI,GAAG;MACbC,OAAO,EAAE;IACX,CAAC;IACDf,YAAY,CAAEgB,QAAiB,IAAK,CAAC,GAAGA,QAAQ,EAAEL,OAAO,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMM,UAAU,GAAIP,IAAW,IAAK;IACpC,MAAMQ,OAAO,GAAGnB,SAAS,CAACoB,MAAM,CAAEC,IAAW,IAAKA,IAAI,CAACP,GAAG,KAAKH,IAAI,CAACG,GAAG,CAAC;IACxEb,YAAY,CAACkB,OAAO,CAAC;EACrB,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBnB,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,MAAMqB,aAAa,GAAIC,CAAgC,IAAK;IAC1DnB,aAAa,CAACmB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMA,KAAK,GAAG;IACZhB,QAAQ;IACRQ,UAAU;IACVI,WAAW;IACXC,aAAa;IACbvB,SAAS;IACTE,KAAK;IACLE;EACF,CAAC;EAED,oBAAOR,OAAA,CAACF,oBAAoB,CAACiC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA5B,QAAA,EAAEA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAgC,CAAC;AAChG,CAAC;AAAChC,EAAA,CAjDIF,aAAwC;AAAAmC,EAAA,GAAxCnC,aAAwC;AAmD9C,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}