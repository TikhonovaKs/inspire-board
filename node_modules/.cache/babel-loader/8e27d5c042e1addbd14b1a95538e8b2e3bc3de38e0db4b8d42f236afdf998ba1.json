{"ast":null,"code":"class PhotoApi {\n  constructor(config) {\n    this._url = void 0;\n    this._headers = void 0;\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject('An error has occurred');\n  }\n  searchPhoto(keyword) {\n    return fetch(`${this._url}search?query=${keyword}&per_page=80`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  fetchStartPhotos() {\n    return fetch(`${this._url}curated?per_page=13`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n}\nconst photoApi = new PhotoApi({\n  url: 'https://api.pexels.com/v1/',\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    Authorization: 'zq95MtbKLDwXRldJIq1QXrV0hhR99pfSwHVkWZiQO6byYJyvH1OYv77Q'\n  }\n});\nexport default photoApi;","map":{"version":3,"names":["PhotoApi","constructor","config","_url","_headers","url","headers","_checkResponse","res","ok","json","Promise","reject","searchPhoto","keyword","fetch","method","then","fetchStartPhotos","photoApi","Accept","Authorization"],"sources":["/Users/tikhonovaks/dev/inspire-board/src/utils/PhotoApi.tsx"],"sourcesContent":["interface Config {\n  url: string;\n  headers: {\n    [key: string]: string;\n  };\n}\n\nclass PhotoApi {\n  private _url: string;\n  private _headers: {\n    [key: string]: string;\n  };\n\n  constructor(config: Config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  private _checkResponse(res: Response): Promise<any> {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject('An error has occurred');\n  }\n\n  public searchPhoto(keyword: string): Promise<any> {\n    return fetch(`${this._url}search?query=${keyword}&per_page=80`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  public fetchStartPhotos(): Promise<any> {\n    return fetch(`${this._url}curated?per_page=13`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n}\n\nconst photoApi = new PhotoApi({\n  url: 'https://api.pexels.com/v1/',\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    Authorization: 'zq95MtbKLDwXRldJIq1QXrV0hhR99pfSwHVkWZiQO6byYJyvH1OYv77Q',\n  },\n});\n\nexport default photoApi;\n"],"mappings":"AAOA,MAAMA,QAAQ,CAAC;EAMbC,WAAWA,CAACC,MAAc,EAAE;IAAA,KALpBC,IAAI;IAAA,KACJC,QAAQ;IAKd,IAAI,CAACD,IAAI,GAAGD,MAAM,CAACG,GAAG;IACtB,IAAI,CAACD,QAAQ,GAAGF,MAAM,CAACI,OAAO;EAChC;EAEQC,cAAcA,CAACC,GAAa,EAAgB;IAClD,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAC,uBAAuB,CAAC;EAChD;EAEOC,WAAWA,CAACC,OAAe,EAAgB;IAChD,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACZ,IAAK,gBAAeW,OAAQ,cAAa,EAAE;MAC9DE,MAAM,EAAE,KAAK;MACbV,OAAO,EAAE,IAAI,CAACF;IAChB,CAAC,CAAC,CAACa,IAAI,CAAC,IAAI,CAACV,cAAc,CAAC;EAC9B;EAEOW,gBAAgBA,CAAA,EAAiB;IACtC,OAAOH,KAAK,CAAE,GAAE,IAAI,CAACZ,IAAK,qBAAoB,EAAE;MAC9Ca,MAAM,EAAE,KAAK;MACbV,OAAO,EAAE,IAAI,CAACF;IAChB,CAAC,CAAC,CAACa,IAAI,CAAC,IAAI,CAACV,cAAc,CAAC;EAC9B;AACF;AAEA,MAAMY,QAAQ,GAAG,IAAInB,QAAQ,CAAC;EAC5BK,GAAG,EAAE,4BAA4B;EACjCC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCc,MAAM,EAAE,kBAAkB;IAC1BC,aAAa,EAAE;EACjB;AACF,CAAC,CAAC;AAEF,eAAeF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}