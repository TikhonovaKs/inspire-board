{"ast":null,"code":"import{useState}from'react';import SearchProviderContext from'./SearchProvider.context';import photoApi from'../../utils/PhotoApi';import{jsx as _jsx}from\"react/jsx-runtime\";const SearchProvider=_ref=>{let{children}=_ref;const[keyWord,setKeyWord]=useState('');const[searchList,setSearchList]=useState([]);const saveSearchListToLocalStorage=list=>{localStorage.setItem('searchList',JSON.stringify(list));};const getRandomCards=currentBoardList=>{photoApi.fetchStartPhotos().then(data=>{const photos=data.photos;const updatedList=photos.map(item=>({id:item.id,src:item.src,alt:item.alt,isSaved:currentBoardList&&currentBoardList.some(boardItem=>boardItem.id===item.id)?true:false}));setSearchList(updatedList);saveSearchListToLocalStorage(updatedList);});};const getSearchCards=(keyword,currentBoardList)=>{if(!keyword){return;}photoApi.searchPhoto(keyword).then(data=>{const photos=data.photos;const updatedList=photos.map(item=>({id:item.id,src:item.src,alt:item.alt,isSaved:currentBoardList&&currentBoardList.some(boardItem=>boardItem.id===item.id)?true:false}));setSearchList(updatedList);saveSearchListToLocalStorage(updatedList);});};const setSavedCard=targetCard=>{const updSearchList=searchList.map(srchCard=>{if(targetCard.id===srchCard.id){return{...srchCard,isSaved:true};}return srchCard;});setSearchList(updSearchList);};const value={keyWord,getRandomCards,getSearchCards,searchList,setSavedCard,setKeyWord};return/*#__PURE__*/_jsx(SearchProviderContext.Provider,{value:value,children:children});};export default SearchProvider;","map":{"version":3,"names":["useState","SearchProviderContext","photoApi","jsx","_jsx","SearchProvider","_ref","children","keyWord","setKeyWord","searchList","setSearchList","saveSearchListToLocalStorage","list","localStorage","setItem","JSON","stringify","getRandomCards","currentBoardList","fetchStartPhotos","then","data","photos","updatedList","map","item","id","src","alt","isSaved","some","boardItem","getSearchCards","keyword","searchPhoto","setSavedCard","targetCard","updSearchList","srchCard","value","Provider"],"sources":["/Users/tikhonovaks/dev/inspire-board/src/providers/SearchProvider/SearchProvider.tsx"],"sourcesContent":["import { useState, FC, ReactNode } from 'react';\nimport SearchProviderContext from './SearchProvider.context';\nimport photoApi from '../../utils/PhotoApi';\nimport Image from '../../models/Image';\n\n\nconst SearchProvider: FC<{children: ReactNode}> = ({ children }) => {\n\n\n  const [keyWord, setKeyWord] = useState('');\n  const [searchList, setSearchList] = useState<Image[]>([]);\n\n  const saveSearchListToLocalStorage = (list: Image[]) => {\n    localStorage.setItem('searchList', JSON.stringify(list));\n  };\n\n  \n  const getRandomCards = (currentBoardList: Image[]) => {\n    photoApi\n    .fetchStartPhotos()\n    .then((data) => {\n      const photos = data.photos;\n      const updatedList = photos.map((item: Image) => ({\n        id: item.id,\n        src: item.src,\n        alt: item.alt,\n        isSaved: currentBoardList && currentBoardList.some((boardItem) => boardItem.id === item.id) ? true : false,\n      }));\n      setSearchList(updatedList);\n      saveSearchListToLocalStorage(updatedList);\n    });\n  };\n\n  const getSearchCards = (keyword: string, currentBoardList: Image[]) => {\n    if (!keyword) {\n      return;\n    }\n    photoApi\n    .searchPhoto(keyword)\n    .then((data) => {\n      const photos = data.photos;\n      const updatedList = photos.map((item: Image) => ({\n        id: item.id,\n        src: item.src,\n        alt: item.alt,\n        isSaved: currentBoardList && currentBoardList.some((boardItem) => boardItem.id === item.id) ? true : false,\n      }));\n      setSearchList(updatedList);\n      saveSearchListToLocalStorage(updatedList);\n    })\n  };\n\n  const setSavedCard = (targetCard: Image) => {\n    const updSearchList: Image[] = searchList.map((srchCard: Image) => {\n      if (targetCard.id === srchCard.id) {\n        return {\n          ...srchCard,\n          isSaved: true,\n        };\n      }\n      return srchCard;\n    });\n    setSearchList(updSearchList);\n  };\n\n  const value = {\n    keyWord,\n    getRandomCards,\n    getSearchCards,\n    searchList,\n    setSavedCard,\n    setKeyWord,\n  };\n\n  return <SearchProviderContext.Provider value={value}>\n      {children}\n    </SearchProviderContext.Provider>;\n};\n\nexport default SearchProvider;\n"],"mappings":"AAAA,OAASA,QAAQ,KAAuB,OAAO,CAC/C,MAAO,CAAAC,qBAAqB,KAAM,0BAA0B,CAC5D,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAI5C,KAAM,CAAAC,cAAyC,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAG7D,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACU,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAU,EAAE,CAAC,CAEzD,KAAM,CAAAY,4BAA4B,CAAIC,IAAa,EAAK,CACtDC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAC1D,CAAC,CAGD,KAAM,CAAAK,cAAc,CAAIC,gBAAyB,EAAK,CACpDjB,QAAQ,CACPkB,gBAAgB,CAAC,CAAC,CAClBC,IAAI,CAAEC,IAAI,EAAK,CACd,KAAM,CAAAC,MAAM,CAAGD,IAAI,CAACC,MAAM,CAC1B,KAAM,CAAAC,WAAW,CAAGD,MAAM,CAACE,GAAG,CAAEC,IAAW,GAAM,CAC/CC,EAAE,CAAED,IAAI,CAACC,EAAE,CACXC,GAAG,CAAEF,IAAI,CAACE,GAAG,CACbC,GAAG,CAAEH,IAAI,CAACG,GAAG,CACbC,OAAO,CAAEX,gBAAgB,EAAIA,gBAAgB,CAACY,IAAI,CAAEC,SAAS,EAAKA,SAAS,CAACL,EAAE,GAAKD,IAAI,CAACC,EAAE,CAAC,CAAG,IAAI,CAAG,KACvG,CAAC,CAAC,CAAC,CACHhB,aAAa,CAACa,WAAW,CAAC,CAC1BZ,4BAA4B,CAACY,WAAW,CAAC,CAC3C,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAS,cAAc,CAAGA,CAACC,OAAe,CAAEf,gBAAyB,GAAK,CACrE,GAAI,CAACe,OAAO,CAAE,CACZ,OACF,CACAhC,QAAQ,CACPiC,WAAW,CAACD,OAAO,CAAC,CACpBb,IAAI,CAAEC,IAAI,EAAK,CACd,KAAM,CAAAC,MAAM,CAAGD,IAAI,CAACC,MAAM,CAC1B,KAAM,CAAAC,WAAW,CAAGD,MAAM,CAACE,GAAG,CAAEC,IAAW,GAAM,CAC/CC,EAAE,CAAED,IAAI,CAACC,EAAE,CACXC,GAAG,CAAEF,IAAI,CAACE,GAAG,CACbC,GAAG,CAAEH,IAAI,CAACG,GAAG,CACbC,OAAO,CAAEX,gBAAgB,EAAIA,gBAAgB,CAACY,IAAI,CAAEC,SAAS,EAAKA,SAAS,CAACL,EAAE,GAAKD,IAAI,CAACC,EAAE,CAAC,CAAG,IAAI,CAAG,KACvG,CAAC,CAAC,CAAC,CACHhB,aAAa,CAACa,WAAW,CAAC,CAC1BZ,4BAA4B,CAACY,WAAW,CAAC,CAC3C,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAY,YAAY,CAAIC,UAAiB,EAAK,CAC1C,KAAM,CAAAC,aAAsB,CAAG5B,UAAU,CAACe,GAAG,CAAEc,QAAe,EAAK,CACjE,GAAIF,UAAU,CAACV,EAAE,GAAKY,QAAQ,CAACZ,EAAE,CAAE,CACjC,MAAO,CACL,GAAGY,QAAQ,CACXT,OAAO,CAAE,IACX,CAAC,CACH,CACA,MAAO,CAAAS,QAAQ,CACjB,CAAC,CAAC,CACF5B,aAAa,CAAC2B,aAAa,CAAC,CAC9B,CAAC,CAED,KAAM,CAAAE,KAAK,CAAG,CACZhC,OAAO,CACPU,cAAc,CACde,cAAc,CACdvB,UAAU,CACV0B,YAAY,CACZ3B,UACF,CAAC,CAED,mBAAOL,IAAA,CAACH,qBAAqB,CAACwC,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAjC,QAAA,CAC/CA,QAAQ,CACqB,CAAC,CACrC,CAAC,CAED,cAAe,CAAAF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}