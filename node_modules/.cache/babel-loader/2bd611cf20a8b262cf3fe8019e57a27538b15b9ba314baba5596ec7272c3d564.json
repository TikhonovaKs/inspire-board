{"ast":null,"code":"import React,{useState}from'react';import'./CardList.css';import useResize from'../../hooks/useResize';import Card from'../Card/Card';import PhotoPopup from'../PhotoPopup/PhotoPopup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const CardList=_ref=>{let{cardsList}=_ref;const[popupVisible,setPopupVisible]=useState(false);const[selectedCard,setSelectedCard]=useState(null);const{isScreenXl,isScreenMd,isScreenSm}=useResize();const visibleCardsMap={isScreenXl:16,isScreenMd:8,isScreenSm:5};const[visibleCardsFromList,setVisibleCardsFromList]=useState(visibleCardsMap[isScreenXl?'isScreenXl':isScreenMd?'isScreenMd':'isScreenSm']);const showMoreCards=()=>{if(isScreenXl){setVisibleCardsFromList(prevValue=>prevValue+16);}else if(isScreenMd){setVisibleCardsFromList(prevValue=>prevValue+8);}else if(isScreenSm){setVisibleCardsFromList(prevValue=>prevValue+5);}else{setVisibleCardsFromList(prevValue=>prevValue+16);}};// remove visible of more button\nconst isButtonHidden=visibleCardsFromList>=cardsList.length;const onCardClick=item=>{setSelectedCard(item);setPopupVisible(true);};const closePopup=()=>{setPopupVisible(false);setSelectedCard(null);// Reset selectedCard when closing the popup\n};const cards=cardsList.slice(0,visibleCardsFromList).map((item,index)=>/*#__PURE__*/_jsx(Card,{card:item,onClick:()=>onCardClick(item)},index)//layoutStyle=\"card card__layout1\"\n);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"section\",{className:\"cardList__wrapper\",children:[/*#__PURE__*/_jsx(\"ul\",{className:\"cardList\",children:cards}),/*#__PURE__*/_jsx(\"button\",{className:\"cardList__button-more \".concat(isButtonHidden?'cardList__button-more-hidden':''),\"aria-label\":\"\",type:\"button\",onClick:showMoreCards,children:\"More\"})]}),popupVisible&&/*#__PURE__*/_jsx(PhotoPopup// className={popupVisible ? 'popup_is-opened' : ''}\n,{selectedCard:selectedCard,onClose:closePopup})]});};export default CardList;","map":{"version":3,"names":["React","useState","useResize","Card","PhotoPopup","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CardList","_ref","cardsList","popupVisible","setPopupVisible","selectedCard","setSelectedCard","isScreenXl","isScreenMd","isScreenSm","visibleCardsMap","visibleCardsFromList","setVisibleCardsFromList","showMoreCards","prevValue","isButtonHidden","length","onCardClick","item","closePopup","cards","slice","map","index","card","onClick","children","className","concat","type","onClose"],"sources":["/Users/tikhonovaks/dev/inspire-board/src/components/CardList/CardList.tsx"],"sourcesContent":["import React, { useState, FC } from 'react';\nimport './CardList.css';\nimport useResize from '../../hooks/useResize';\nimport Card from '../Card/Card';\nimport PhotoPopup from '../PhotoPopup/PhotoPopup';\nimport Image from '../../models/Image';\n\ninterface CardListProps {\n  cardsList: Image[],\n}\n\nconst CardList: FC<CardListProps> = ({ cardsList }) => {\n  const [popupVisible, setPopupVisible] = useState(false);\n  const [selectedCard, setSelectedCard] = useState<Image | null>(null);\n\n  const { isScreenXl, isScreenMd, isScreenSm } = useResize();\n  const visibleCardsMap = {\n    isScreenXl: 16,\n    isScreenMd: 8,\n    isScreenSm: 5,\n  };\n  const [visibleCardsFromList, setVisibleCardsFromList] = useState(\n    visibleCardsMap[isScreenXl ? 'isScreenXl' : isScreenMd ? 'isScreenMd' : 'isScreenSm']\n  );\n  const showMoreCards = () => {\n    if (isScreenXl) {\n      setVisibleCardsFromList((prevValue) => prevValue + 16);\n    } else if (isScreenMd) {\n      setVisibleCardsFromList((prevValue) => prevValue + 8);\n    } else if (isScreenSm) {\n      setVisibleCardsFromList((prevValue) => prevValue + 5);\n    } else {\n      setVisibleCardsFromList((prevValue) => prevValue + 16);\n    }\n  };\n  // remove visible of more button\n  const isButtonHidden = visibleCardsFromList >= cardsList.length;\n\n  const onCardClick = (item: Image | null) => { \n    setSelectedCard(item);\n    setPopupVisible(true);\n  };\n\n  const closePopup = () => {\n    setPopupVisible(false);\n    setSelectedCard(null); // Reset selectedCard when closing the popup\n  };\n\n  const cards = cardsList\n    .slice(0, visibleCardsFromList)\n    .map((item, index) => (\n      <Card key={index} card={item} onClick={() => onCardClick(item)} />\n      //layoutStyle=\"card card__layout1\"\n    ));\n\n  return (\n    <>\n      <section className=\"cardList__wrapper\">\n        <ul className=\"cardList\">{cards}</ul>\n        <button\n          className={`cardList__button-more ${isButtonHidden ? 'cardList__button-more-hidden' : ''}`}\n          aria-label=\"\"\n          type=\"button\"\n          onClick={showMoreCards}\n        >\n          More\n        </button>\n      </section>\n      {popupVisible && (\n        <PhotoPopup\n          // className={popupVisible ? 'popup_is-opened' : ''}\n          selectedCard={selectedCard}\n          onClose={closePopup}\n        />\n      )}\n    </>\n  );\n}\nexport default CardList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}