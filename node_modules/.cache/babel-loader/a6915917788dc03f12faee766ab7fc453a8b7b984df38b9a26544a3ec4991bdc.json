{"ast":null,"code":"var _jsxFileName = \"/Users/tikhonovaks/dev/inspire-board/src/providers/BoardProvider/BoardProvider.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport BoardProviderContext from './BoardProvider.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardProvider = ({\n  children\n}) => {\n  _s();\n  const [boardList, setBoardList] = useState(JSON.parse(localStorage.getItem('savedList') || '') || []);\n  const [likes, setLikes] = useState(JSON.parse(localStorage.getItem('boardLikes') || '') || 0);\n  const [boardTitle, setBoardTitle] = useState(JSON.parse(localStorage.getItem('boardTitle') || '') || '');\n  useEffect(() => {\n    localStorage.setItem('savedList', JSON.stringify(boardList));\n    localStorage.setItem('boardLikes', JSON.stringify(likes));\n    localStorage.setItem('boardTitle', JSON.stringify(boardTitle));\n  }, [boardList, likes, boardTitle]);\n  const saveCard = data => {\n    const newCard = {\n      id: data.id,\n      src: data.src,\n      alt: data.alt,\n      isSaved: true\n    };\n    setBoardList(prevList => [...prevList, newCard]);\n  };\n  const deleteCard = data => {\n    const updList = boardList.filter(card => card.src !== data.src);\n    setBoardList(updList);\n  };\n  const handleLikes = () => {\n    setLikes(likes + 1);\n  };\n  const onChangeTitle = e => {\n    setBoardTitle(e.target.value);\n  };\n  const value = {\n    saveCard,\n    deleteCard,\n    handleLikes,\n    onChangeTitle,\n    boardList,\n    likes,\n    boardTitle\n  };\n  return /*#__PURE__*/_jsxDEV(BoardProviderContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_s(BoardProvider, \"Z43oXp+hTSILpbBBrkP1xyN0G+g=\");\n_c = BoardProvider;\nexport default BoardProvider;\nvar _c;\n$RefreshReg$(_c, \"BoardProvider\");","map":{"version":3,"names":["useState","useEffect","BoardProviderContext","jsxDEV","_jsxDEV","BoardProvider","children","_s","boardList","setBoardList","JSON","parse","localStorage","getItem","likes","setLikes","boardTitle","setBoardTitle","setItem","stringify","saveCard","data","newCard","id","src","alt","isSaved","prevList","deleteCard","updList","filter","card","handleLikes","onChangeTitle","e","target","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tikhonovaks/dev/inspire-board/src/providers/BoardProvider/BoardProvider.tsx"],"sourcesContent":["import { useState, useEffect, ChangeEvent, FC, ReactNode } from 'react';\nimport BoardProviderContext from './BoardProvider.context';\nimport Image from '../../models/Image';\n\nconst BoardProvider: FC<{children: ReactNode}> = ({ children }) => {\n  const [boardList, setBoardList] = useState<Image[]>(JSON.parse(localStorage.getItem('savedList') || '') || []);\n  const [likes, setLikes] = useState<number>(JSON.parse(localStorage.getItem('boardLikes') || '') || 0);\n  const [boardTitle, setBoardTitle] = useState<string>(JSON.parse(localStorage.getItem('boardTitle') || '') || '');\n\n  useEffect(() => {\n    localStorage.setItem('savedList', JSON.stringify(boardList));\n    localStorage.setItem('boardLikes', JSON.stringify(likes));\n    localStorage.setItem('boardTitle', JSON.stringify(boardTitle));\n  }, [boardList, likes, boardTitle]);\n\n  const saveCard = (data: Image) => {\n    const newCard = {\n      id: data.id,\n      src: data.src,\n      alt: data.alt,\n      isSaved: true,\n    };\n    setBoardList((prevList: Image[]) => [...prevList, newCard]);\n  };\n\n  const deleteCard = (data: Image) => {\n  const updList = boardList.filter((card: Image) => card.src !== data.src);\n  setBoardList(updList);\n  }\n\n  const handleLikes = () => {\n    setLikes(likes + 1);\n  };\n\n  const onChangeTitle = (e: ChangeEvent<HTMLInputElement>) => {\n    setBoardTitle(e.target.value);\n  };\n\n  const value = {\n    saveCard,\n    deleteCard,\n    handleLikes,\n    onChangeTitle,\n    boardList,\n    likes,\n    boardTitle,\n  };\n\n  return <BoardProviderContext.Provider value={value}>{children}</BoardProviderContext.Provider>;\n};\n\nexport default BoardProvider;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAoC,OAAO;AACvE,OAAOC,oBAAoB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3D,MAAMC,aAAwC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAUU,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;EAC9G,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAASU,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;EACrG,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAASU,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;EAEhHZ,SAAS,CAAC,MAAM;IACdW,YAAY,CAACM,OAAO,CAAC,WAAW,EAAER,IAAI,CAACS,SAAS,CAACX,SAAS,CAAC,CAAC;IAC5DI,YAAY,CAACM,OAAO,CAAC,YAAY,EAAER,IAAI,CAACS,SAAS,CAACL,KAAK,CAAC,CAAC;IACzDF,YAAY,CAACM,OAAO,CAAC,YAAY,EAAER,IAAI,CAACS,SAAS,CAACH,UAAU,CAAC,CAAC;EAChE,CAAC,EAAE,CAACR,SAAS,EAAEM,KAAK,EAAEE,UAAU,CAAC,CAAC;EAElC,MAAMI,QAAQ,GAAIC,IAAW,IAAK;IAChC,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEF,IAAI,CAACE,EAAE;MACXC,GAAG,EAAEH,IAAI,CAACG,GAAG;MACbC,GAAG,EAAEJ,IAAI,CAACI,GAAG;MACbC,OAAO,EAAE;IACX,CAAC;IACDjB,YAAY,CAAEkB,QAAiB,IAAK,CAAC,GAAGA,QAAQ,EAAEL,OAAO,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMM,UAAU,GAAIP,IAAW,IAAK;IACpC,MAAMQ,OAAO,GAAGrB,SAAS,CAACsB,MAAM,CAAEC,IAAW,IAAKA,IAAI,CAACP,GAAG,KAAKH,IAAI,CAACG,GAAG,CAAC;IACxEf,YAAY,CAACoB,OAAO,CAAC;EACrB,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBjB,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,MAAMmB,aAAa,GAAIC,CAAgC,IAAK;IAC1DjB,aAAa,CAACiB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMA,KAAK,GAAG;IACZhB,QAAQ;IACRQ,UAAU;IACVI,WAAW;IACXC,aAAa;IACbzB,SAAS;IACTM,KAAK;IACLE;EACF,CAAC;EAED,oBAAOZ,OAAA,CAACF,oBAAoB,CAACmC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA9B,QAAA,EAAEA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAgC,CAAC;AAChG,CAAC;AAAClC,EAAA,CA7CIF,aAAwC;AAAAqC,EAAA,GAAxCrC,aAAwC;AA+C9C,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}