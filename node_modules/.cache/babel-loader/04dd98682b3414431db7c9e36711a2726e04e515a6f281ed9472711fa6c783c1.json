{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst SCREEN_XL = 860;\nconst SCREEN_MD = 600;\nconst SCREEN_SM = 320;\nfunction useResize() {\n  _s();\n  // initial state width equal to the current window width\n  const [width, setWidth] = useState(window.innerWidth);\n\n  // Effect of window resizing:\n  useEffect(() => {\n    // when changing the window size, call handleResize to update the width state with the new window width\n    const handleResize = event => {\n      setWidth(event.target.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return {\n    width,\n    isScreenXl: width >= SCREEN_XL,\n    isScreenMd: width >= SCREEN_MD,\n    isScreenSm: width >= SCREEN_SM\n  };\n}\n_s(useResize, \"G7kj69GIMHEKUWgFcp/hGy+ukY8=\");\nexport default useResize;","map":{"version":3,"names":["useState","useEffect","SCREEN_XL","SCREEN_MD","SCREEN_SM","useResize","_s","width","setWidth","window","innerWidth","handleResize","event","target","addEventListener","removeEventListener","isScreenXl","isScreenMd","isScreenSm"],"sources":["/Users/tikhonovaks/dev/inspire-board/src/hooks/useResize.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst SCREEN_XL = 860;\nconst SCREEN_MD = 600;\nconst SCREEN_SM = 320;\n\nfunction useResize() {\n  // initial state width equal to the current window width\n  const [width, setWidth] = useState(window.innerWidth);\n\n  // Effect of window resizing:\n  useEffect(() => {\n    // when changing the window size, call handleResize to update the width state with the new window width\n    const handleResize = (event) => {\n      setWidth(event.target.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return {\n    width,\n    isScreenXl: width >= SCREEN_XL,\n    isScreenMd: width >= SCREEN_MD,\n    isScreenSm: width >= SCREEN_SM,\n  };\n}\n\nexport default useResize;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,SAAS,GAAG,GAAG;AACrB,MAAMC,SAAS,GAAG,GAAG;AACrB,MAAMC,SAAS,GAAG,GAAG;AAErB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACS,MAAM,CAACC,UAAU,CAAC;;EAErD;EACAT,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,YAAY,GAAIC,KAAK,IAAK;MAC9BJ,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACH,UAAU,CAAC;IACnC,CAAC;IACDD,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAC/C,OAAO,MAAM;MACXF,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLJ,KAAK;IACLS,UAAU,EAAET,KAAK,IAAIL,SAAS;IAC9Be,UAAU,EAAEV,KAAK,IAAIJ,SAAS;IAC9Be,UAAU,EAAEX,KAAK,IAAIH;EACvB,CAAC;AACH;AAACE,EAAA,CAtBQD,SAAS;AAwBlB,eAAeA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}