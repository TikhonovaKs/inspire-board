{"ast":null,"code":"var _jsxFileName = \"/Users/tikhonovaks/dev/inspire-board/src/components/CardList/CardList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CardList.css';\nimport useResize from '../../hooks/useResize';\nimport Card from '../Card/Card';\nimport PhotoPopup from '../PhotoPopup/PhotoPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardList = ({\n  cardsList\n}) => {\n  _s();\n  const [popupVisible, setPopupVisible] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const {\n    isScreenXl,\n    isScreenMd,\n    isScreenSm\n  } = useResize();\n  const visibleCardsMap = {\n    isScreenXl: 16,\n    isScreenMd: 8,\n    isScreenSm: 5\n  };\n  const [visibleCardsFromList, setVisibleCardsFromList] = useState(visibleCardsMap[isScreenXl ? 'isScreenXl' : isScreenMd ? 'isScreenMd' : 'isScreenSm']);\n  const showMoreCards = () => {\n    if (isScreenXl) {\n      setVisibleCardsFromList(prevValue => prevValue + 16);\n    } else if (isScreenMd) {\n      setVisibleCardsFromList(prevValue => prevValue + 8);\n    } else if (isScreenSm) {\n      setVisibleCardsFromList(prevValue => prevValue + 5);\n    } else {\n      setVisibleCardsFromList(prevValue => prevValue + 16);\n    }\n  };\n  // remove visible of more button\n  const isButtonHidden = visibleCardsFromList >= cardsList.length;\n  const onCardClick = item => {\n    setSelectedCard(item);\n    setPopupVisible(true);\n  };\n  const closePopup = () => {\n    setPopupVisible(false);\n    setSelectedCard(null); // Reset selectedCard when closing the popup\n  };\n  const cards = cardsList.slice(0, visibleCardsFromList).map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n    card: item,\n    onClick: () => onCardClick(item)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this)\n  //layoutStyle=\"card card__layout1\"\n  );\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cardList__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"cardList\",\n        children: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `cardList__button-more ${isButtonHidden ? 'cardList__button-more-hidden' : ''}`,\n        \"aria-label\": \"\",\n        type: \"button\",\n        onClick: showMoreCards,\n        children: \"More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), popupVisible && /*#__PURE__*/_jsxDEV(PhotoPopup\n    // className={popupVisible ? 'popup_is-opened' : ''}\n    , {\n      selectedCard: selectedCard,\n      onClose: closePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(CardList, \"4qicnAk00K6otPmWdzjGNpdRRaY=\", false, function () {\n  return [useResize];\n});\n_c = CardList;\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","useState","useResize","Card","PhotoPopup","jsxDEV","_jsxDEV","Fragment","_Fragment","CardList","cardsList","_s","popupVisible","setPopupVisible","selectedCard","setSelectedCard","isScreenXl","isScreenMd","isScreenSm","visibleCardsMap","visibleCardsFromList","setVisibleCardsFromList","showMoreCards","prevValue","isButtonHidden","length","onCardClick","item","closePopup","cards","slice","map","index","card","onClick","fileName","_jsxFileName","lineNumber","columnNumber","children","className","type","onClose","_c","$RefreshReg$"],"sources":["/Users/tikhonovaks/dev/inspire-board/src/components/CardList/CardList.tsx"],"sourcesContent":["import React, { useState, FC } from 'react';\nimport './CardList.css';\nimport useResize from '../../hooks/useResize';\nimport Card from '../Card/Card';\nimport PhotoPopup from '../PhotoPopup/PhotoPopup';\nimport Image from '../../models/Image';\n\ninterface CardListProps {\n  cardsList: Image[],\n}\n\nconst CardList: FC<CardListProps> = ({ cardsList }) => {\n  const [popupVisible, setPopupVisible] = useState(false);\n  const [selectedCard, setSelectedCard] = useState<Image | null>(null);\n\n  const { isScreenXl, isScreenMd, isScreenSm } = useResize();\n  const visibleCardsMap = {\n    isScreenXl: 16,\n    isScreenMd: 8,\n    isScreenSm: 5,\n  };\n  const [visibleCardsFromList, setVisibleCardsFromList] = useState(\n    visibleCardsMap[isScreenXl ? 'isScreenXl' : isScreenMd ? 'isScreenMd' : 'isScreenSm']\n  );\n  const showMoreCards = () => {\n    if (isScreenXl) {\n      setVisibleCardsFromList((prevValue) => prevValue + 16);\n    } else if (isScreenMd) {\n      setVisibleCardsFromList((prevValue) => prevValue + 8);\n    } else if (isScreenSm) {\n      setVisibleCardsFromList((prevValue) => prevValue + 5);\n    } else {\n      setVisibleCardsFromList((prevValue) => prevValue + 16);\n    }\n  };\n  // remove visible of more button\n  const isButtonHidden = visibleCardsFromList >= cardsList.length;\n\n  const onCardClick = (item: Image | null) => { \n    setSelectedCard(item);\n    setPopupVisible(true);\n  };\n\n  const closePopup = () => {\n    setPopupVisible(false);\n    setSelectedCard(null); // Reset selectedCard when closing the popup\n  };\n\n  const cards = cardsList\n    .slice(0, visibleCardsFromList)\n    .map((item, index) => (\n      <Card key={index} card={item} onClick={() => onCardClick(item)} />\n      //layoutStyle=\"card card__layout1\"\n    ));\n\n  return (\n    <>\n      <section className=\"cardList__wrapper\">\n        <ul className=\"cardList\">{cards}</ul>\n        <button\n          className={`cardList__button-more ${isButtonHidden ? 'cardList__button-more-hidden' : ''}`}\n          aria-label=\"\"\n          type=\"button\"\n          onClick={showMoreCards}\n        >\n          More\n        </button>\n      </section>\n      {popupVisible && (\n        <PhotoPopup\n          // className={popupVisible ? 'popup_is-opened' : ''}\n          selectedCard={selectedCard}\n          onClose={closePopup}\n        />\n      )}\n    </>\n  );\n}\nexport default CardList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}